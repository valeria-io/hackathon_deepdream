!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("react")):"function"==typeof define&&define.amd?define(["react"],t):"object"==typeof exports?exports.Webcam=t(require("react")):e.Webcam=t(e.React)}(this,function(e){return function(e){var t={};function i(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,i),s.l=!0,s.exports}return i.m=e,i.c=t,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)i.d(r,s,function(t){return e[t]}.bind(null,s));return r},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=1)}([function(t,i){t.exports=e},function(e,t,i){"use strict";i.r(t),i.d(t,"default",function(){return n});var r=i(0),s=function(e,t){var i={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(i[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(i[r[s]]=e[r[s]])}return i};class n extends r.Component{constructor(e){super(e),this.ctx=null,this.state={hasUserMedia:!1}}componentDidMount(){if(!(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia))return;const{state:e}=this;n.mountedInstances.push(this),e.hasUserMedia||n.userMediaRequested||this.requestUserMedia()}componentDidUpdate(e){const{props:t}=this;JSON.stringify(e.audioConstraints)===JSON.stringify(t.audioConstraints)&&JSON.stringify(e.videoConstraints)===JSON.stringify(t.videoConstraints)||this.requestUserMedia()}componentWillUnmount(){const{state:e}=this,t=n.mountedInstances.indexOf(this);n.mountedInstances.splice(t,1),n.userMediaRequested=!1,0===n.mountedInstances.length&&e.hasUserMedia&&(this.stream.getVideoTracks&&this.stream.getAudioTracks?(this.stream.getVideoTracks().map(e=>e.stop()),this.stream.getAudioTracks().map(e=>e.stop())):this.stream.stop(),e.src&&window.URL.revokeObjectURL(e.src))}getScreenshot(){const{state:e,props:t}=this;if(!e.hasUserMedia)return null;const i=this.getCanvas();return i&&i.toDataURL(t.screenshotFormat,t.screenshotQuality)}getCanvas(){const{state:e,props:t}=this;if(!this.video)return null;if(!e.hasUserMedia||!this.video.videoHeight)return null;if(!this.ctx){const e=document.createElement("canvas"),i=this.video.videoWidth/this.video.videoHeight;let r=t.minScreenshotWidth||this.video.clientWidth,s=r/i;t.minScreenshotHeight&&s<t.minScreenshotHeight&&(r=(s=t.minScreenshotHeight)*i),e.width=r,e.height=s,this.canvas=e,this.ctx=e.getContext("2d")}const{ctx:i,canvas:r}=this;return i&&(t.mirrored?(i.translate(r.width,0),i.scale(-1,1)):(i.translate(0,0),i.scale(1,1)),i.imageSmoothingEnabled=t.imageSmoothing,i.drawImage(this.video,0,0,r.width,r.height)),r}requestUserMedia(){const{props:e}=this;navigator.getUserMedia=navigator.mediaDevices.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;const t=(t,i)=>{const r={video:void 0===i||i};e.audio&&(r.audio=void 0===t||t),navigator.mediaDevices.getUserMedia(r).then(e=>{n.mountedInstances.forEach(t=>t.handleUserMedia(null,e))}).catch(e=>{n.mountedInstances.forEach(t=>t.handleUserMedia(e))})};if("mediaDevices"in navigator)t(e.audioConstraints,e.videoConstraints);else{const i=e=>({optional:[{sourceId:e}]}),r=e=>{const{deviceId:t}=e;return"string"==typeof t?t:Array.isArray(t)&&t.length>0?t[0]:"object"==typeof t&&t.ideal?t.ideal:null};MediaStreamTrack.getSources(s=>{let n=null,o=null;s.forEach(e=>{"audio"===e.kind?n=e.id:"video"===e.kind&&(o=e.id)});const a=r(e.audioConstraints);a&&(n=a);const d=r(e.videoConstraints);d&&(o=d),t(i(n),i(o))})}n.userMediaRequested=!0}handleUserMedia(e,t){const{props:i}=this;if(e||!t)return this.setState({hasUserMedia:!1}),void i.onUserMediaError(e);this.stream=t;try{this.video&&(this.video.srcObject=t),this.setState({hasUserMedia:!0})}catch(e){this.setState({hasUserMedia:!0,src:window.URL.createObjectURL(t)})}i.onUserMedia()}render(){const{state:e,props:t}=this,{audio:i,onUserMedia:n,onUserMediaError:o,screenshotFormat:a,screenshotQuality:d,minScreenshotWidth:c,minScreenshotHeight:u,audioConstraints:h,videoConstraints:l,imageSmoothing:m,mirrored:f,style:p={}}=t,g=s(t,["audio","onUserMedia","onUserMediaError","screenshotFormat","screenshotQuality","minScreenshotWidth","minScreenshotHeight","audioConstraints","videoConstraints","imageSmoothing","mirrored","style"]),v=f?Object.assign(Object.assign({},p),{transform:`${p.transform||""} scaleX(-1)`}):p;return r.createElement("video",Object.assign({autoPlay:!0,src:e.src,muted:i,playsInline:!0,ref:e=>{this.video=e},style:v},g))}}n.defaultProps={audio:!0,imageSmoothing:!0,mirrored:!1,onUserMedia:()=>{},onUserMediaError:()=>{},screenshotFormat:"image/webp",screenshotQuality:.92},n.mountedInstances=[],n.userMediaRequested=!1}]).default});